# CMake generated Testfile for 
# Source directory: D:/Github/ApproxMVBB/tests
# Build directory: D:/Github/ApproxMVBB/build/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ApproxMVBBTest-ConvexHull "D:/Github/ApproxMVBB/build/tests/Debug/ApproxMVBBTest-ConvexHull.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ApproxMVBBTest-ConvexHull "D:/Github/ApproxMVBB/build/tests/Release/ApproxMVBBTest-ConvexHull.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ApproxMVBBTest-ConvexHull "D:/Github/ApproxMVBB/build/tests/MinSizeRel/ApproxMVBBTest-ConvexHull.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ApproxMVBBTest-ConvexHull "D:/Github/ApproxMVBB/build/tests/RelWithDebInfo/ApproxMVBBTest-ConvexHull.exe")
else()
  add_test(ApproxMVBBTest-ConvexHull NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ApproxMVBBTest-MinAreaRect "D:/Github/ApproxMVBB/build/tests/Debug/ApproxMVBBTest-MinAreaRect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ApproxMVBBTest-MinAreaRect "D:/Github/ApproxMVBB/build/tests/Release/ApproxMVBBTest-MinAreaRect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ApproxMVBBTest-MinAreaRect "D:/Github/ApproxMVBB/build/tests/MinSizeRel/ApproxMVBBTest-MinAreaRect.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ApproxMVBBTest-MinAreaRect "D:/Github/ApproxMVBB/build/tests/RelWithDebInfo/ApproxMVBBTest-MinAreaRect.exe")
else()
  add_test(ApproxMVBBTest-MinAreaRect NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ApproxMVBBTest-Diameter "D:/Github/ApproxMVBB/build/tests/Debug/ApproxMVBBTest-Diameter.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ApproxMVBBTest-Diameter "D:/Github/ApproxMVBB/build/tests/Release/ApproxMVBBTest-Diameter.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ApproxMVBBTest-Diameter "D:/Github/ApproxMVBB/build/tests/MinSizeRel/ApproxMVBBTest-Diameter.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ApproxMVBBTest-Diameter "D:/Github/ApproxMVBB/build/tests/RelWithDebInfo/ApproxMVBBTest-Diameter.exe")
else()
  add_test(ApproxMVBBTest-Diameter NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ApproxMVBBTest-DiameterOOBB "D:/Github/ApproxMVBB/build/tests/Debug/ApproxMVBBTest-DiameterOOBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ApproxMVBBTest-DiameterOOBB "D:/Github/ApproxMVBB/build/tests/Release/ApproxMVBBTest-DiameterOOBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ApproxMVBBTest-DiameterOOBB "D:/Github/ApproxMVBB/build/tests/MinSizeRel/ApproxMVBBTest-DiameterOOBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ApproxMVBBTest-DiameterOOBB "D:/Github/ApproxMVBB/build/tests/RelWithDebInfo/ApproxMVBBTest-DiameterOOBB.exe")
else()
  add_test(ApproxMVBBTest-DiameterOOBB NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ApproxMVBBTest-MVBB "D:/Github/ApproxMVBB/build/tests/Debug/ApproxMVBBTest-MVBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ApproxMVBBTest-MVBB "D:/Github/ApproxMVBB/build/tests/Release/ApproxMVBBTest-MVBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ApproxMVBBTest-MVBB "D:/Github/ApproxMVBB/build/tests/MinSizeRel/ApproxMVBBTest-MVBB.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ApproxMVBBTest-MVBB "D:/Github/ApproxMVBB/build/tests/RelWithDebInfo/ApproxMVBBTest-MVBB.exe")
else()
  add_test(ApproxMVBBTest-MVBB NOT_AVAILABLE)
endif()
subdirs("../thirdparty/googletest-build")
